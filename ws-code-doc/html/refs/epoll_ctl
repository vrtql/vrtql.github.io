<dec f='include/x86_64-linux-gnu/sys/epoll.h' l='109' type='int epoll_ctl(int __epfd, int __op, int __fd, struct epoll_event * __event)'/>
<doc f='include/x86_64-linux-gnu/sys/epoll.h' l='103'>/* Manipulate an epoll instance &quot;epfd&quot;. Returns 0 in case of success,
   -1 in case of error ( the &quot;errno&quot; variable will contain the
   specific error code ) The &quot;op&quot; parameter is one of the EPOLL_CTL_*
   constants defined above. The &quot;fd&quot; parameter is the target of the
   operation. The &quot;event&quot; parameter describes which events the caller
   is interested in and any associated user data.  */</doc>
<use f='codebrowser/src/test/util/mongoose.c' l='200' macro='1' u='c' c='mg_wrapfd'/>
<use f='codebrowser/src/test/util/mongoose.c' l='115' macro='1' u='c' c='iolog'/>
<use f='codebrowser/src/test/util/mongoose.c' l='234' macro='1' u='c' c='mg_open_listener'/>
<use f='codebrowser/src/test/util/mongoose.c' l='291' u='c' c='close_conn'/>
<use f='codebrowser/src/test/util/mongoose.c' l='308' macro='1' u='c' c='connect_conn'/>
<use f='codebrowser/src/test/util/mongoose.c' l='340' macro='1' u='c' c='mg_connect_resolved'/>
<use f='codebrowser/src/test/util/mongoose.c' l='354' macro='1' u='c' c='mg_connect_resolved'/>
<use f='codebrowser/src/test/util/mongoose.c' l='404' macro='1' u='c' c='accept_conn'/>
<use f='codebrowser/src/test/util/mongoose.c' l='516' macro='1' u='c' c='mg_iotest'/>
