<dec f='codebrowser/src/mpack/mpack-expect.h' l='1069' type='char * mpack_expect_utf8_cstr_alloc(mpack_reader_t * reader, size_t maxsize)'/>
<doc f='codebrowser/src/mpack/mpack-expect.h' l='1047'>/**
 * Reads a string with the given total maximum size (including space for a
 * null-terminator), allocates storage for it, ensures it is valid UTF-8
 * with no null-bytes, and adds a null-terminator at the end. You assume
 * ownership of the returned pointer if reading succeeds.
 *
 * The length in bytes of the string, not including the null-terminator,
 * will be written to size.
 *
 * This does not accept any UTF-8 variant such as Modified UTF-8, CESU-8 or
 * WTF-8. Only pure UTF-8 is allowed, but without the NUL character, since
 * it cannot be represented in a null-terminated string.
 *
 * The allocated string must be freed with MPACK_FREE() (or simply free()
 * if MPack&apos;s allocator hasn&apos;t been customized.)
 * if you want a null-terminator.
 *
 * @throws mpack_error_too_big If the string plus null-terminator is larger
 *     than the given maxsize.
 * @throws mpack_error_type If the value is not a string or contains
 *     invalid UTF-8 or a null byte.
 */</doc>
<def f='codebrowser/src/mpack/mpack-expect.c' l='674' ll='685' type='char * mpack_expect_utf8_cstr_alloc(mpack_reader_t * reader, size_t maxsize)'/>
